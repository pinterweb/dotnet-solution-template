{
    "$schema": "http://json.schemastore.org/template",
    "author": "Jeremy Zagorski",
    "classifications": [ "Solution", "Web", "WebApi", "Routing" ],
    "identity": "WebApiSolution.CSharp",
    "name": "ASP.NET Core Web API Routing Solution",
    "shortName": "webapi-bizapp",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "sourceName": "BusinessApp",
    "symbols":{
        "description": {
            "type": "parameter",
            "dataType": "string",
            "replaces":"$(product_description)",
            "defaultValue": "",
            "isRequired": "false",
            "description": "A description of your app"
        },
        "copyrightName": {
            "type": "parameter",
            "dataType": "string",
            "isRequired": "false",
            "description": "Your personal or company copyright"
        },
        "copyrightYear": {
            "type": "generated",
            "generator": "now",
            "replaces": "1975-1975",
            "parameters": {
                "format": "yyyy"
            }
        },
        "vsc": {
            "type": "parameter",
            "dataType": "string",
            "defaultValue": "git",
            "description": "Adds vsc related files"
        },
        "efcore": {
            "type": "parameter",
            "dataType": "bool",
            "defaultValue": "true",
            "description": "Adds services for entity framework core in your data layer"
        },
        "json": {
            "type": "parameter",
            "dataType": "bool",
            "defaultValue": "true",
            "description": "Adds services to parse json payloads"
        },
        "connstrName": {
            "type": "parameter",
            "dataType": "string",
            "isRequired": "false",
            "defaultValue": "SQLCONNSTR_BUSINESSAPPLICATION",
            "replaces": "SQLCONNSTR_BUSINESSAPPLICATION",
            "description": "Connection string name for your application"
        },
        "docker": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "false",
            "description": "Adds support for docker and docker-compose. Set it up with docker_run.cmd"
        },
        "fluentvalidation": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "false",
            "description": "Adds services integrate the fluent validation library"
        },
        "dataannotations": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "true",
            "description": "Adds data annotations for validation to app project"
        },
        "winauth": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "false",
            "description": "Adds windows authentication"
        },
        "cors": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "false",
            "description": "Adds support for CORS"
        },
        "staticfiles": {
            "type": "parameter",
            "dataType": "bool",
            "isRequired": "false",
            "defaultValue": "true",
            "description": "Adds support to serve static files"
        },
        "copyrightReplacer": {
            "type": "generated",
            "generator": "coalesce",
            "parameters": {
                "sourceVariableName": "copyrightName",
                "fallbackVariableName": "name"
            },
            "replaces": "$(Your Copyright Name)"
        },
        "compilerDirectives": {
             "type": "generated",
             "generator": "constant",
             "parameters": {
                 "value":"#"
              },
              "replaces":"//#"
        }
    },
    "sources": [
        {
            "modifiers": [
                {
                    "exclude": [
                        "src/.vs/**"
                    ]
                },
                {
                    "condition": "(!efcore)",
                    "exclude": [
                        "src/.config/dotnet-tools.json",
                        "src/BusinessApp.Data/BusinessAppDbContext.cs",
                        "src/BusinessApp.Data/database_restore.cmd",
                        "src/BusinessApp.Data/database_restore.sh",
                        "src/BusinessApp.Data/database_up.cmd",
                        "src/BusinessApp.Data/database_up.sh",
                        "src/BusinessApp.Data/EF*.cs",
                        "src/BusinessApp.Data/IDbSetVisitor.cs",
                        "src/BusinessApp.Data/IDbSetVisitorFactory.cs",
                        "src/BusinessApp.Data/NullDbSetVisitor.cs",
                        "src/BusinessApp.Data/NullDbSetVisitorFactory.cs",
                        "src/BusinessApp.Data/EventRepository.cs",
                        "src/BusinessApp.Data/migrations_add.cmd",
                        "src/BusinessApp.Data/migrations_add.sh",
                        "src/BusinessApp.Data/migrations_restore.cmd",
                        "src/BusinessApp.Data/migrations_restore.sh",
                        "src/BusinessApp.Data/Migrations/**",
                        "src/BusinessApp.Data.IntegrationTest/EF*.cs",
                        "src/BusinessApp.Data.IntegrationTest/BusinessAppDbContextDummyFactory.cs",
                        "src/BusinessApp.Data.IntegrationTest/EventRepositoryTests.cs",
                        "src/BusinessApp.Test.Common/BusinessAppTestDbContext.cs",
                        "src/BusinessApp.Test.Common/DatabaseFixture.cs",
                        "src/BusinessApp.Test.Common/migrations*.cmd",
                        "src/**/EFCore*.cs"
                    ]
                },
                {
                    "condition": "(!dataannotations)",
                    "exclude": [
                        "src/**/DataAnnotations*.cs",
                        "src/**/ValidateObjectAttribute*.cs",
                        "src/**/CompositeValidationResult*.cs"
                    ]
                },
                {
                    "condition": "(!fluentvalidation)",
                    "exclude": [
                        "src/**/FluentValidation*.cs"
                    ]
                },
                {
                    "condition": "(!json)",
                    "exclude": [
                        "src/BusinessApp.WebApi/Json/**",
                        "src/BusinessApp.App/Json/**"
                    ]
                },
                {
                    "condition": "(!docker)",
                    "exclude": [
                        "src/docker-compose.yml",
                        "src/Dockerfile",
                        "src/.env",
                        "src/docker_run.cmd",
                        "src/.dockerignore",
                        "src/BusinessApp.WebApi/.env.docker"
                    ]
                }
            ]
        }
    ],
    "postActions": [{
      "condition": "(vsc==\"git\")",
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "args": {
        "executable": "git",
        "args": "init"
      },
      "manualInstructions": [{
         "text": "Run 'git init'"
      }],
      "continueOnError": false,
      "description ": "sets up the project with git"
    },{
      "condition": "(vsc==\"git\")",
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "args": {
        "executable": "git",
        "args": "config core.hooksPath .githooks"
      },
      "manualInstructions": [{
         "text": "Run 'git config'"
      }],
      "continueOnError": false,
      "description ": "sets up git hooks"
    }]
}
